version: "3"

services:

  lb:
    image: dockercloud/haproxy
    environment:
      - BALANCE=leastconn
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8080:80
    depends_on:
      - apache
    networks:
      - frontend
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  apache:
    build:
      context: ./apache
    volumes:
      - ./apache/config/apache2.conf:/etc/apache2/apache2.conf:ro
      - ~/apache-logs:/var/log/apache2:rw
    ports:
      - 80
    environment:
      - SERVICE_PORTS=80
      - PHP_UPSTREAM=php:9000
      - EXCLUDE_PORTS=443
    networks:
      - frontend
      - backend
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  filebeat:
    build:
      context: filebeat/
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ~/apache-logs:/var/log/apache2:ro
    depends_on:
      - apache
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  php:
    build:
      context: ./php-fpm
    volumes:
      - ./php-fpm/php.ini:/usr/local/etc/php/php.ini:ro
    restart: always
    ports:
      - 9000:9000
    depends_on:
      - redis
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  redis:
    image: redis:3
    ports:
      - 6379:6379
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  elasticsearch:
    build:
      context: elasticsearch/
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  logstash:
    build:
      context: logstash/
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure

  kibana:
    build:
      context: kibana/
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - logs-frontend
      - backend
    deploy:
      restart_policy:
        condition: on-failure

networks:
  frontend:
    driver: overlay
  backend:
    driver: overlay
  logs-frontend:
    driver: overlay
